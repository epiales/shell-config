#!/bin/sh

if hash docker 2>/dev/null; then

	# export environment variables to current session
	dme() { eval $(docker-machine env $1); }

	# Get latest container ID
	alias dl="docker ps -l -q"

	# Get container process
	alias dps="docker ps"

	# Get process included stop container
	alias dpa="docker ps -a"

	# Get images
	alias di="docker images"

	# Get container IP
	alias dip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"

	# Execute a command on an existing container, e.g., $de container-name /bin/bash
	alias dex='docker exec -it'

	# Run interactive container, e.g., $di base /bin/bash
	alias di="docker run -i -t -P"

	# Stop all containers
	alias dstop='docker stop $(docker ps -aq);'

	# Remove all exited containers
	alias drm='docker rm'

	# Remove all exited containers
	alias drme='docker rm -fv $(docker ps -q -f status=exited)'

	# Remove all containers
	alias drma='docker rm -fv $(docker ps -aq)'

	# Stop and Remove all containers
	alias drmf='docker rm -fv $(docker ps -aq)'

	# Remove all images
	alias dri='docker rmi $(docker images -q)'

	# Trim all dangling images
	alias dti='docker rmi $(docker images -q --filter "dangling=true")'

	# Dockerfile build, e.g., $dbu repo/test
	dbu() {
		if [ ! -z "$NPM_TOKEN" ]; then
			echo "NPM_TOKEN = ${NPM_TOKEN}"
			sed -i.bak "s@\[\[npm_token\]\]@${NPM_TOKEN}@" Dockerfile; rm Dockerfile.bak;
		fi

		docker build -t=$1 .;

		if [ ! -z "$NPM_TOKEN" ]; then
			sed -i.bak "s@${NPM_TOKEN}@\[\[npm_token\]\]@" Dockerfile; rm Dockerfile.bak;
		fi
	}

	# Show all aliases related docker
	dalias() { alias | grep 'docker' | sed "s/^\([^=]*\)=\(.*\)/\1 => \2/"| sed "s/['|\']//g" | sort; }

fi
