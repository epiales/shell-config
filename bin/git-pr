#!/usr/bin/env python

import argparse
import os
import sys
import webbrowser

sys.path.append( os.path.join( os.path.dirname( __file__ ), '..', 'py' ) )

from common import color
from git import parseRemote
from git import requireRemotes
from subprocess import check_output

# TODO: support *.wiki.git remote urls
# TODO: allow for http vs https in UI

# Configure commandline arguments
parser = argparse.ArgumentParser( description="open the html pull page based on current repo" )
parser = argparse.ArgumentParser()

currentBranch = check_output( [ 'git', 'rev-parse', '--symbolic-full-name', '--abbrev-ref', 'HEAD' ] ).rstrip()

parser.add_argument( '-u', '--upstream', default='upstream', type=str, help='Remote to use as upstream (default: %(default)s)' )
parser.add_argument( '-o', '--origin', default='origin', type=str, help='Remote to use as origin (default: %(default)s)' )
parser.add_argument( 'source', nargs='?', default=currentBranch, help='Source branch, defaults to current branch', )
parser.add_argument( 'target', nargs='?', default=currentBranch, help='Target branch, defaults to current branch', )

args = parser.parse_args()

# Set upstream an origin remotes based on input
upstream = args.upstream
origin   = args.origin
target   = args.target
source   = args.source

requireRemotes( upstream, parser )
requireRemotes( origin, parser )

def openPR():
    u = parseRemote( upstream )
    o = parseRemote( origin )

    # Open GitHub URL
    def github():
        url = 'https://github.com/' + u[ 'owner' ] + '/' + u[ 'repo' ] + '/compare/' + target + '...' + o[ 'owner' ] + ':' + source
        webbrowser.open( url )

    # Open GitLab URL
    def gitlab():
        url = 'https://' + u[ 'url' ] + '/' + u[ 'owner' ] + '/' + u[ 'repo' ] + '/merge_requests/new'
        webbrowser.open( url )

    def openURL(argument):
        urls = {
            'github.com'                   : github,
            'git.mstuttle.com'             : gitlab,
            'gitlab.com'                   : gitlab,
            'gitlab.schoolimprovement.com' : gitlab
        }

        return urls.get(argument, "nothing")()

    openURL( u[ 'domain' ] );

openPR()
